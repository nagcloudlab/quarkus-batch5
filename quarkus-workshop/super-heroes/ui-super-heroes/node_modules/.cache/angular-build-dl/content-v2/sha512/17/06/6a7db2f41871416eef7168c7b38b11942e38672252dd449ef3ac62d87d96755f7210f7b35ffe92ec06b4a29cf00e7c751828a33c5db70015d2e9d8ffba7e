{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/fight-list/fight-list.component.html","src/app/fight/fight.component.html","node_modules/tslib/tslib.es6.js","src/app/app.component.ts","src/app/app.module.ts","src/app/fight-list/fight-list.component.ts","src/app/fight/fight.component.ts","src/app/shared/api.module.ts","src/app/shared/api/api.ts","src/app/shared/api/fight.service.ts","src/app/shared/configuration.ts","src/app/shared/model/fighters.ts","src/app/shared/model/hero.ts","src/app/shared/model/villain.ts","src/app/shared/variables.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAAA,wBAAA,CAAA,GAAA,EAAA;AACA;AACA;AACA,aAAA,OAAA,CAAA,OAAA,GAAA,IAAA,CAAA,YAAA;AACA,YAAA,CAAA,GAAA,IAAA,KAAA,CAAA,yBAAA,GAAA,GAAA,GAAA,CAAA;AACA,QAAA,CAAA,CAAA,IAAA,GAAA,kBAAA;AACA,cAAA,CAAA;AACE,OAJF,CAAA;AAKA;;AACA,IAAA,wBAAA,CAAA,IAAA,GAAA,YAAA;AAA4C,aAAA,EAAA;AAAW,KAAvD;;AACA,IAAA,wBAAA,CAAA,OAAA,GAAA,wBAAA;AACA,IAAA,MAAA,CAAA,OAAA,GAAA,wBAAA;AACA,IAAA,wBAAA,CAAA,EAAA,GAAA,yCAAA;;;;;;;;;;;;;;;;ACZA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,4NAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,6yCAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,m2EAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,WAAA,EAAA,YAAA;AAAA,aAAA,SAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,UAAA,EAAA,YAAA;AAAA,aAAA,OAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,YAAA;AAAA,aAAA,MAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,YAAA,EAAA,YAAA;AAAA,aAAA,UAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,SAAA,EAAA,YAAA;AAAA,aAAA,OAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,YAAA,EAAA,YAAA;AAAA,aAAA,UAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,WAAA,EAAA,YAAA;AAAA,aAAA,SAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,aAAA,EAAA,YAAA;AAAA,aAAA,WAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,cAAA,EAAA,YAAA;AAAA,aAAA,YAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,UAAA,EAAA,YAAA;AAAA,aAAA,QAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,YAAA;AAAA,aAAA,MAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,UAAA,EAAA,YAAA;AAAA,aAAA,QAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,gBAAA,EAAA,YAAA;AAAA,aAAA,cAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,SAAA,EAAA,YAAA;AAAA,aAAA,OAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,kBAAA,EAAA,YAAA;AAAA,aAAA,gBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,kBAAA,EAAA,YAAA;AAAA,aAAA,gBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,eAAA,EAAA,YAAA;AAAA,aAAA,aAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,sBAAA,EAAA,YAAA;AAAA,aAAA,oBAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,cAAA,EAAA,YAAA;AAAA,aAAA,YAAA;AAAA,KAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,iBAAA,EAAA,YAAA;AAAA,aAAA,eAAA;AAAA,KAAA;AAAA;;;;;;;;;;;;;;;AAcA;;;AAEA,QAAA,cAAA,GAAA,uBAAA,CAAA,EAAA,CAAA,EAAA;AACA,MAAA,cAAA,GAAA,MAAA,CAAA,cAAA,IACA;AAAU,QAAA,SAAA,EAAA;AAAV,mBAA0B,KAA1B,IAA0B,UAAA,CAAA,EAAA,CAAA,EAAA;AAAsC,QAAA,CAAA,CAAA,SAAA,GAAA,CAAA;AAAmB,OADnF,IAEA,UAAA,CAAA,EAAA,CAAA,EAAA;AAAyB,aAAA,IAAA,CAAA,IAAA,CAAA;AAAA,cAAA,CAAA,CAAA,cAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA;AAAuD,OAFhF;;AAGA,aAAA,cAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AACA,KALA;;AAOO,aAAA,SAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AACP,MAAA,cAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;AACA,eAAA,EAAA,GAAA;AAAmB,aAAA,WAAA,GAAA,CAAA;AAAsB;;AACzC,MAAA,CAAA,CAAA,SAAA,GAAA,CAAA,KAAA,IAAA,GAAA,MAAA,CAAA,MAAA,CAAA,CAAA,CAAA,IAAA,EAAA,CAAA,SAAA,GAAA,CAAA,CAAA,SAAA,EAAA,IAAA,EAAA,EAAA,CAAA;AACA;;AAEO,QAAA,OAAA,GAAA,oBAAA;AACP,MAAA,OAAA,GAAA,MAAA,CAAA,MAAA,IAAA,SAAA,QAAA,CAAA,CAAA,EAAA;AACA,aAAA,IAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,MAAA,EAAgD,CAAA,GAAA,CAAhD,EAAuD,CAAA,EAAvD,EAAuD;AACvD,UAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA;;AACA,eAAA,IAAA,CAAA,IAAA,CAAA;AAAA,gBAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA;AACA;;AACA,eAAA,CAAA;AACA,OANA;;AAOA,aAAA,OAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA;AACA,KATO;;AAWA,aAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AACP,UAAA,CAAA,GAAA,EAAA;;AACA,WAAA,IAAA,CAAA,IAAA,CAAA;AAAA,YAAA,MAAA,CAAA,SAAA,CAAA,cAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,KAAA,CAAA,CAAA,OAAA,CAAA,CAAA,IAAA,CAAA,EACA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AADA;;AAEA,UAAA,CAAA,IAAA,IAAA,IAAA,OAAA,MAAA,CAAA,qBAAA,KAAA,UAAA,EACA,KAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,MAAA,CAAA,qBAAA,CAAA,CAAA,CAAA,EAA4D,CAAA,GAAA,CAAA,CAAA,MAA5D,EAA0E,CAAA,EAA1E,EAA0E;AAC1E,YAAA,CAAA,CAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,CAAA,IAAA,MAAA,CAAA,SAAA,CAAA,oBAAA,CAAA,IAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EACA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AACA;AACA,aAAA,CAAA;AACA;;AAEO,aAAA,UAAA,CAAA,UAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,EAAA;AACP,UAAA,CAAA,GAAA,SAAA,CAAA,MAAA;AAAA,UAAA,CAAA,GAAA,CAAA,GAAA,CAAA,GAAA,MAAA,GAAA,IAAA,KAAA,IAAA,GAAA,IAAA,GAAA,MAAA,CAAA,wBAAA,CAAA,MAAA,EAAA,GAAA,CAAA,GAAA,IAAA;AAAA,UAAA,CAAA;AACA,UAAA,OAAA,OAAA,KAAA,QAAA,IAAA,OAAA,OAAA,CAAA,QAAA,KAAA,UAAA,EAAA,CAAA,GAAA,OAAA,CAAA,QAAA,CAAA,UAAA,EAAA,MAAA,EAAA,GAAA,EAAA,IAAA,CAAA,CAAA,KACA,KAAA,IAAA,CAAA,GAAA,UAAA,CAAA,MAAA,GAAA,CAAA,EAA4C,CAAA,IAAA,CAA5C,EAAoD,CAAA,EAApD;AAAoD,YAAA,CAAA,GAAA,UAAA,CAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,MAAA,EAAA,GAAA,EAAA,CAAA,CAAA,GAAA,CAAA,CAAA,MAAA,EAAA,GAAA,CAAA,KAAA,CAAA;AAApD;AACA,aAAA,CAAA,GAAA,CAAA,IAAA,CAAA,IAAA,MAAA,CAAA,cAAA,CAAA,MAAA,EAAA,GAAA,EAAA,CAAA,CAAA,EAAA,CAAA;AACA;;AAEO,aAAA,OAAA,CAAA,UAAA,EAAA,SAAA,EAAA;AACP,aAAA,UAAA,MAAA,EAAA,GAAA,EAAA;AAAmC,QAAA,SAAA,CAAA,MAAA,EAAA,GAAA,EAAA,UAAA,CAAA;AAAoC,OAAvE;AACA;;AAEO,aAAA,UAAA,CAAA,WAAA,EAAA,aAAA,EAAA;AACP,UAAA,OAAA,OAAA,KAAA,QAAA,IAAA,OAAA,OAAA,CAAA,QAAA,KAAA,UAAA,EAAA,OAAA,OAAA,CAAA,QAAA,CAAA,WAAA,EAAA,aAAA,CAAA;AACA;;AAEO,aAAA,SAAA,CAAA,OAAA,EAAA,UAAA,EAAA,CAAA,EAAA,SAAA,EAAA;AACP,aAAA,KAAA,CAAA,KAAA,CAAA,GAAA,OAAA,CAAA,EAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AACA,iBAAA,SAAA,CAAA,KAAA,EAAA;AAAmC,cAAA;AAAM,YAAA,IAAA,CAAA,SAAA,CAAA,IAAA,CAAA,KAAA,CAAA,CAAA;AAA+B,WAArC,CAAqC,OAAA,CAAA,EAAA;AAAY,YAAA,MAAA,CAAA,CAAA,CAAA;AAAa;AAAA;;AACjG,iBAAA,QAAA,CAAA,KAAA,EAAA;AAAkC,cAAA;AAAM,YAAA,IAAA,CAAA,SAAA,CAAA,OAAA,CAAA,CAAA,KAAA,CAAA,CAAA;AAAmC,WAAzC,CAAyC,OAAA,CAAA,EAAA;AAAY,YAAA,MAAA,CAAA,CAAA,CAAA;AAAa;AAAA;;AACpG,iBAAA,IAAA,CAAA,MAAA,EAAA;AAA+B,UAAA,MAAA,CAAA,IAAA,GAAA,OAAA,CAAA,MAAA,CAAA,KAAA,CAAA,GAAA,IAAA,CAAA,CAAA,UAAA,OAAA,EAAA;AAAiE,YAAA,OAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AAAyB,WAA1F,EAA0F,IAA1F,CAA0F,SAA1F,EAA0F,QAA1F,CAAA;AAAsH;;AACrJ,QAAA,IAAA,CAAA,CAAA,SAAA,GAAA,SAAA,CAAA,KAAA,CAAA,OAAA,EAAA,UAAA,IAAA,EAAA,CAAA,EAAA,IAAA,EAAA,CAAA;AACK,OALL,CAAA;AAMA;;AAEO,aAAA,WAAA,CAAA,OAAA,EAAA,IAAA,EAAA;AACP,UAAA,CAAA,GAAA;AAAa,QAAA,KAAA,EAAA,CAAb;AAAa,QAAA,IAAA,EAAA,gBAAA;AAA6B,cAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA;AAA0B,iBAAA,CAAA,CAAA,CAAA,CAAA;AAAe,SAAnF;AAAmF,QAAA,IAAA,EAAA,EAAnF;AAAmF,QAAA,GAAA,EAAA;AAAnF,OAAA;AAAA,UAAwG,CAAxG;AAAA,UAAwG,CAAxG;AAAA,UAAwG,CAAxG;AAAA,UAAwG,CAAxG;AACA,aAAA,CAAA,GAAA;AAAgB,QAAA,IAAA,EAAA,IAAA,CAAA,CAAA,CAAhB;AAAgB,iBAAA,IAAA,CAAA,CAAA,CAAhB;AAAgB,kBAAA,IAAA,CAAA,CAAA;AAAhB,OAAA,EAAqE,OAAA,MAAA,KAAA,UAAA,KAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,GAAA,YAAA;AAAoE,eAAA,IAAA;AAAe,OAAnF,CAArE,EAAwJ,CAAxJ;;AACA,eAAA,IAAA,CAAA,CAAA,EAAA;AAAsB,eAAA,UAAA,CAAA,EAAA;AAAsB,iBAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA;AAAqB,SAA3C;AAA8C;;AACpE,eAAA,IAAA,CAAA,EAAA,EAAA;AACA,YAAA,CAAA,EAAA,MAAA,IAAA,SAAA,CAAA,iCAAA,CAAA;;AACA,eAAA,CAAA;AAAA,cAAA;AACA,gBAAA,CAAA,GAAA,CAAA,EAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,OAAA,CAAA,KAAA,CAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,KAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAAA,CAAA,CAAA,EAAA,IAAA,EAAA,OAAA,CAAA;AACA,gBAAA,CAAA,GAAA,CAAA,EAAA,CAAA,EAAA,EAAA,GAAA,CAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,EAAA,CAAA,CAAA,KAAA,CAAA;;AACA,oBAAA,EAAA,CAAA,CAAA,CAAA;AACA,mBAAA,CAAA;AAAA,mBAAA,CAAA;AAAA,gBAAA,CAAA,GAAA,EAAA;AAAuC;;AACvC,mBAAA,CAAA;AAAA,gBAAA,CAAA,CAAA,KAAA;AAAkC,uBAAA;AAAS,kBAAA,KAAA,EAAA,EAAA,CAAA,CAAA,CAAT;AAAS,kBAAA,IAAA,EAAA;AAAT,iBAAA;;AAClC,mBAAA,CAAA;AAAA,gBAAA,CAAA,CAAA,KAAA;AAAkC,gBAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AAAW,gBAAA,EAAA,GAAA,CAAA,CAAA,CAAA;AAAU;;AACvD,mBAAA,CAAA;AAAA,gBAAA,EAAA,GAAA,CAAA,CAAA,GAAA,CAAA,GAAA,EAAA;;AAAyC,gBAAA,CAAA,CAAA,IAAA,CAAA,GAAA;;AAAc;;AACvD;AACA,oBAAA,EAAA,CAAA,GAAA,CAAA,CAAA,IAAA,EAAA,CAAA,GAAA,CAAA,CAAA,MAAA,GAAA,CAAA,IAAA,CAAA,CAAA,CAAA,CAAA,MAAA,GAAA,CAAA,CAAA,MAAA,EAAA,CAAA,CAAA,CAAA,KAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA;AAA6G,kBAAA,CAAA,GAAA,CAAA;AAAO;AAAU;;AAC9H,oBAAA,EAAA,CAAA,CAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AAAgF,kBAAA,CAAA,CAAA,KAAA,GAAA,EAAA,CAAA,CAAA,CAAA;AAAiB;AAAO;;AACxG,oBAAA,EAAA,CAAA,CAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AAAwD,kBAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAgB,kBAAA,CAAA,GAAA,EAAA;AAAQ;AAAO;;AACvF,oBAAA,CAAA,IAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,CAAA,CAAA,EAAA;AAA8C,kBAAA,CAAA,CAAA,KAAA,GAAA,CAAA,CAAA,CAAA,CAAA;;AAAgB,kBAAA,CAAA,CAAA,GAAA,CAAA,IAAA,CAAA,EAAA;;AAAgB;AAAO;;AACrF,oBAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,GAAA,CAAA,GAAA;;AACA,gBAAA,CAAA,CAAA,IAAA,CAAA,GAAA;;AAAiC;AAXjC;;AAaA,YAAA,EAAA,GAAA,IAAA,CAAA,IAAA,CAAA,OAAA,EAAA,CAAA,CAAA;AACS,WAjBT,CAiBS,OAAA,CAAA,EAAA;AAAY,YAAA,EAAA,GAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAa,YAAA,CAAA,GAAA,CAAA;AAAS,WAjB3C,SAiB2C;AAAU,YAAA,CAAA,GAAA,CAAA,GAAA,CAAA;AAAW;AAjBhE;;AAkBA,YAAA,EAAA,CAAA,CAAA,CAAA,GAAA,CAAA,EAAA,MAAA,EAAA,CAAA,CAAA,CAAA;AAAmC,eAAA;AAAS,UAAA,KAAA,EAAA,EAAA,CAAA,CAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA,GAAA,KAAA,CAAT;AAAS,UAAA,IAAA,EAAA;AAAT,SAAA;AACnC;AACA;;AAEO,aAAA,YAAA,CAAA,CAAA,EAAA,OAAA,EAAA;AACP,WAAA,IAAA,CAAA,IAAA,CAAA;AAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA,CAAA,CAAA,EAAA,OAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AAAA;AACA;;AAEO,aAAA,QAAA,CAAA,CAAA,EAAA;AACP,UAAA,CAAA,GAAA,OAAA,MAAA,KAAA,UAAA,IAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA;AAAA,UAAA,CAAA,GAAA,CAAA;AACA,UAAA,CAAA,EAAA,OAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AACA,aAAA;AACA,QAAA,IAAA,EAAA,gBAAA;AACA,cAAA,CAAA,IAAA,CAAA,IAAA,CAAA,CAAA,MAAA,EAAA,CAAA,GAAA,KAAA,CAAA;AACA,iBAAA;AAAoB,YAAA,KAAA,EAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAApB;AAAoB,YAAA,IAAA,EAAA,CAAA;AAApB,WAAA;AACA;AAJA,OAAA;AAMA;;AAEO,aAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AACP,UAAA,CAAA,GAAA,OAAA,MAAA,KAAA,UAAA,IAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA;AACA,UAAA,CAAA,CAAA,EAAA,OAAA,CAAA;AACA,UAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA;AAAA,UAAA,CAAA;AAAA,UAAA,EAAA,GAAA,EAAA;AAAA,UAAA,CAAA;;AACA,UAAA;AACA,eAAA,CAAA,CAAA,KAAA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,KAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA,EAAA,EAAA,IAAA;AAAA,UAAA,EAAA,CAAA,IAAA,CAAA,CAAA,CAAA,KAAA;AAAA;AACA,OAFA,CAGA,OAAA,KAAA,EAAA;AAAmB,QAAA,CAAA,GAAA;AAAM,UAAA,KAAA,EAAA;AAAN,SAAA;AAAsB,OAHzC,SAIA;AACA,YAAA;AACA,cAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,GAAA,CAAA,CAAA,QAAA,CAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,CAAA;AACA,SAFA,SAGA;AAAiB,cAAA,CAAA,EAAA,MAAA,CAAA,CAAA,KAAA;AAAsB;AACvC;;AACA,aAAA,EAAA;AACA;;AAEO,aAAA,QAAA,GAAA;AACP,WAAA,IAAA,EAAA,GAAA,EAAA,EAAA,CAAA,GAAA,CAAA,EAA4B,CAAA,GAAA,SAAA,CAAA,MAA5B,EAAkD,CAAA,EAAlD;AACA,QAAA,EAAA,GAAA,EAAA,CAAA,MAAA,CAAA,MAAA,CAAA,SAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AADA;;AAEA,aAAA,EAAA;AACA;;AAEO,aAAA,cAAA,GAAA;AACP,WAAA,IAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,EAAA,GAAA,SAAA,CAAA,MAAA,EAAiD,CAAA,GAAA,EAAjD,EAAyD,CAAA,EAAzD;AAAyD,QAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,CAAA,MAAA;AAAzD;;AACA,WAAA,IAAA,CAAA,GAAA,KAAA,CAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAwC,CAAA,GAAA,EAAxC,EAAgD,CAAA,EAAhD;AACA,aAAA,IAAA,CAAA,GAAA,SAAA,CAAA,CAAA,CAAA,EAAA,CAAA,GAAA,CAAA,EAAA,EAAA,GAAA,CAAA,CAAA,MAAA,EAAwD,CAAA,GAAA,EAAxD,EAAgE,CAAA,IAAA,CAAA,EAAhE;AACA,UAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA;AADA;AADA;;AAGA,aAAA,CAAA;AACA;;AAAA;;AAEO,aAAA,OAAA,CAAA,CAAA,EAAA;AACP,aAAA,gBAAA,OAAA,IAAA,KAAA,CAAA,GAAA,CAAA,EAAA,IAAA,IAAA,IAAA,OAAA,CAAA,CAAA,CAAA;AACA;;AAEO,aAAA,gBAAA,CAAA,OAAA,EAAA,UAAA,EAAA,SAAA,EAAA;AACP,UAAA,CAAA,MAAA,CAAA,aAAA,EAAA,MAAA,IAAA,SAAA,CAAA,sCAAA,CAAA;AACA,UAAA,CAAA,GAAA,SAAA,CAAA,KAAA,CAAA,OAAA,EAAA,UAAA,IAAA,EAAA,CAAA;AAAA,UAAA,CAAA;AAAA,UAAA,CAAA,GAAA,EAAA;AACA,aAAA,CAAA,GAAA,EAAA,EAAiB,IAAA,CAAA,MAAA,CAAjB,EAAiB,IAAA,CAAA,OAAA,CAAjB,EAAiB,IAAA,CAAA,QAAA,CAAjB,EAAiB,CAAA,CAAA,MAAA,CAAA,aAAA,CAAA,GAAA,YAAA;AAAsF,eAAA,IAAA;AAAe,OAAtH,EAAsH,CAAtH;;AACA,eAAA,IAAA,CAAA,CAAA,EAAA;AAAsB,YAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,GAAA,UAAA,CAAA,EAAA;AAAgC,iBAAA,IAAA,OAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA;AAAqC,YAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA,IAAA,CAAA,IAAA,MAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAA4C,WAAjF,CAAA;AAAmF,SAAnH;AAAsH;;AAC5I,eAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAA2B,YAAA;AAAM,UAAA,IAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAiB,SAAvB,CAAuB,OAAA,CAAA,EAAA;AAAY,UAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAsB;AAAA;;AACpF,eAAA,IAAA,CAAA,CAAA,EAAA;AAAsB,QAAA,CAAA,CAAA,KAAA,YAAA,OAAA,GAAA,OAAA,CAAA,OAAA,CAAA,CAAA,CAAA,KAAA,CAAA,CAAA,EAAA,IAAA,CAAA,OAAA,EAAA,MAAA,CAAA,GAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA;AAAoG;;AAC1H,eAAA,OAAA,CAAA,KAAA,EAAA;AAA6B,QAAA,MAAA,CAAA,MAAA,EAAA,KAAA,CAAA;AAAuB;;AACpD,eAAA,MAAA,CAAA,KAAA,EAAA;AAA4B,QAAA,MAAA,CAAA,OAAA,EAAA,KAAA,CAAA;AAAwB;;AACpD,eAAA,MAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAA2B,YAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,KAAA,EAAA,EAAA,CAAA,CAAA,MAAA,EAAA,MAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA;AAAyD;AACpF;;AAEO,aAAA,gBAAA,CAAA,CAAA,EAAA;AACP,UAAA,CAAA,EAAA,CAAA;AACA,aAAA,CAAA,GAAA,EAAA,EAAiB,IAAA,CAAA,MAAA,CAAjB,EAAiB,IAAA,CAAA,OAAA,EAAA,UAAA,CAAA,EAAA;AAA4C,cAAA,CAAA;AAAW,OAAvD,CAAjB,EAAwE,IAAA,CAAA,QAAA,CAAxE,EAAwE,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,GAAA,YAAA;AAAqD,eAAA,IAAA;AAAe,OAA5I,EAA4I,CAA5I;;AACA,eAAA,IAAA,CAAA,CAAA,EAAA,CAAA,EAAA;AAAyB,QAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,UAAA,CAAA,EAAA;AAA6B,iBAAA,CAAA,CAAA,GAAA,CAAA,CAAA,IAAA;AAAoB,YAAA,KAAA,EAAA,OAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAApB;AAAoB,YAAA,IAAA,EAAA,CAAA,KAAA;AAApB,WAAA,GAAoE,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAApE;AAAsF,SAAnH,GAAmH,CAAnH;AAAwH;AACjJ;;AAEO,aAAA,aAAA,CAAA,CAAA,EAAA;AACP,UAAA,CAAA,MAAA,CAAA,aAAA,EAAA,MAAA,IAAA,SAAA,CAAA,sCAAA,CAAA;AACA,UAAA,CAAA,GAAA,CAAA,CAAA,MAAA,CAAA,aAAA,CAAA;AAAA,UAAA,CAAA;AACA,aAAA,CAAA,GAAA,CAAA,CAAA,IAAA,CAAA,CAAA,CAAA,IAAA,CAAA,GAAA,OAAA,QAAA,KAAA,UAAA,GAAA,QAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,EAAA,EAAA,CAAA,GAAA,EAAA,EAA2G,IAAA,CAAA,MAAA,CAA3G,EAA2G,IAAA,CAAA,OAAA,CAA3G,EAA2G,IAAA,CAAA,QAAA,CAA3G,EAA2G,CAAA,CAAA,MAAA,CAAA,aAAA,CAAA,GAAA,YAAA;AAAsF,eAAA,IAAA;AAAe,OAAhN,EAAgN,CAAhN,CAAA;;AACA,eAAA,IAAA,CAAA,CAAA,EAAA;AAAsB,QAAA,CAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,IAAA,UAAA,CAAA,EAAA;AAA8B,iBAAA,IAAA,OAAA,CAAA,UAAA,OAAA,EAAA,MAAA,EAAA;AAAgD,YAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,OAAA,EAAA,MAAA,EAAA,CAAA,CAAA,IAAA,EAAA,CAAA,CAAA,KAAA,CAAA;AAAyD,WAAzG,CAAA;AAA2G,SAAzI;AAA4I;;AAClK,eAAA,MAAA,CAAA,OAAA,EAAA,MAAA,EAAA,CAAA,EAAA,CAAA,EAAA;AAA4C,QAAA,OAAA,CAAA,OAAA,CAAA,CAAA,EAAA,IAAA,CAAA,UAAA,CAAA,EAAA;AAAsC,UAAA,OAAA,CAAA;AAAU,YAAA,KAAA,EAAA,CAAV;AAAU,YAAA,IAAA,EAAA;AAAV,WAAA,CAAA;AAAkC,SAAxE,EAAwE,MAAxE;AAAkF;AAC9H;;AAEO,aAAA,oBAAA,CAAA,MAAA,EAAA,GAAA,EAAA;AACP,UAAA,MAAA,CAAA,cAAA,EAAA;AAAgC,QAAA,MAAA,CAAA,cAAA,CAAA,MAAA,EAAA,KAAA,EAAA;AAAuC,UAAA,KAAA,EAAA;AAAvC,SAAA;AAAwD,OAAxF,MAAwF;AAAO,QAAA,MAAA,CAAA,GAAA,GAAA,GAAA;AAAkB;;AACjH,aAAA,MAAA;AACA;;AAAA;;AAEO,aAAA,YAAA,CAAA,GAAA,EAAA;AACP,UAAA,GAAA,IAAA,GAAA,CAAA,UAAA,EAAA,OAAA,GAAA;AACA,UAAA,MAAA,GAAA,EAAA;AACA,UAAA,GAAA,IAAA,IAAA,EAAA,KAAA,IAAA,CAAA,IAAA,GAAA;AAAA,YAAA,MAAA,CAAA,cAAA,CAAA,IAAA,CAAA,GAAA,EAAA,CAAA,CAAA,EAAA,MAAA,CAAA,CAAA,CAAA,GAAA,GAAA,CAAA,CAAA,CAAA;AAAA;AACA,MAAA,MAAA,CAAA,OAAA,GAAA,GAAA;AACA,aAAA,MAAA;AACA;;AAEO,aAAA,eAAA,CAAA,GAAA,EAAA;AACP,aAAA,GAAA,IAAA,GAAA,CAAA,UAAA,GAAA,GAAA,GAAA;AAA4C,QAAA,OAAA,EAAA;AAA5C,OAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7LA,QAAa,YAAb,GAJA,wBAAA;AAAA;;AAKE,WAAA,KAAA,GAAQ,oBAAR;AACD,KAFD;;AAAa,IAAA,YAAY,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJxB,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,WADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,0EAAA,CAAA,EAAA;AAFS,KAAV,CAIwB,CAAA,EAAZ,YAAY,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC4Bb,QAAa,SAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,SAAS,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAnBrB,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,YAAY,EAAE,CACZ,2CAAA,CAAA,cAAA,CADY,EAEZ,6DAAA,CAAA,oBAAA,CAFY,EAGZ,mDAAA,CAAA,gBAAA,CAHY,CADN;AAMR,MAAA,OAAO,EAAE,CACP,sDAAA,CAAA,eAAA,CADO,EAEP,iEAAA,CAAA,yBAAA,CAFO,EAGP,kDAAA,CAAA,kBAAA,CAHO,EAIP,sDAAA,CAAA,kBAAA,CAJO,EAKP,mDAAA,CAAA,eAAA,CALO,EAMP,qDAAA,CAAA,iBAAA,CANO,EAOP,yDAAA,CAAA,mBAAA,CAPO,EAQP,qDAAA,CAAA,gBAAA,CARO,CAND;AAgBR,MAAA,SAAS,EAAE,CAAC,qCAAA,CAAA,cAAA,CAAD,CAhBH;AAiBR,MAAA,SAAS,EAAE,CAAC,2CAAA,CAAA,cAAA,CAAD;AAjBH,KAAT,CAmBqB,CAAA,EAAT,SAAS,CAAT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBb,QAAa,kBAAb;AAAA;AAAA;AAKE,kCAAoB,YAApB,EAA8C;AAAA;;AAAA;;AAA1B,aAAA,YAAA,GAAA,YAAA;AAFpB,aAAA,gBAAA,GAA6B,CAAC,IAAD,EAAO,WAAP,EAAoB,YAApB,EAAkC,WAAlC,CAA7B;AAGE,aAAK,UAAL,GAAkB,IAAI,8CAAA,CAAA,oBAAA,CAAJ,EAAlB;AACA,QAAA,YAAY,CAAC,OAAb,CAAqB,SAArB,CAA+B,UAAA,KAAK,EAAG;AACrC,cAAM,IAAI,GAAG,KAAI,CAAC,UAAL,CAAgB,IAA7B;AACA,UAAA,IAAI,CAAC,OAAL,CAAa,KAAb;AACA,UAAA,KAAI,CAAC,UAAL,CAAgB,IAAhB,GAAuB,IAAvB;AACD,SAJD;AAKD;;AAZH;AAAA;AAAA,mCAcU;AAAA;;AACN,eAAK,YAAL,CAAkB,YAAlB,GAAiC,SAAjC,CAA2C,UAAA,MAAM,EAAG;AAClD,YAAA,MAAI,CAAC,UAAL,CAAgB,IAAhB,GAAuB,MAAM,CAAC,OAAP,EAAvB;AACD,WAFD;AAGD;AAlBH;;AAAA;AAAA,OAAA;;;;cAKoC,oCAAA,CAAA,cAAA;;;;AALvB,IAAA,kBAAkB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAL9B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,iBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,4FAAA,CAAA,EAAA;AAFS,KAAV,CAK8B,CAAA,EAAlB,kBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFb,QAAa,cAAb;AAAA;AAAA;AAKE,8BAAoB,YAApB,EAA8C;AAAA;;AAA1B,aAAA,YAAA,GAAA,YAAA;AAHpB,aAAA,QAAA,GAAqB,IAAI,oCAAA,CAAA,UAAA,CAAJ,EAArB;AAIC;;AANH;AAAA;AAAA,mCAQU;AACN,eAAK,WAAL;AACD;AAVH;AAAA;AAAA,gCAYO;AAAA;;AACH,eAAK,YAAL,CAAkB,aAAlB,CAAgC,KAAK,QAArC,EAA+C,SAA/C,CACE,UAAA,KAAK,EAAG;AACN,YAAA,MAAI,CAAC,YAAL,CAAkB,UAAlB,CAA6B,KAA7B;;AACA,YAAA,MAAI,CAAC,MAAL,GAAc,KAAK,CAAC,UAApB;AACD,WAJH;AAMD;AAnBH;AAAA;AAAA,sCAqBa;AAAA;;AACT,eAAK,MAAL,GAAc,IAAd;AACA,eAAK,YAAL,CAAkB,0BAAlB,GAA+C,SAA/C,CAAyD,UAAA,QAAQ;AAAA,mBAAI,MAAI,CAAC,QAAL,GAAgB,QAApB;AAAA,WAAjE;AACD;AAxBH;;AAAA;AAAA,OAAA;;;;cAKoC,oCAAA,CAAA,cAAA;;;;AALvB,IAAA,cAAc,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJ1B,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,YADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,kFAAA,CAAA,EAAA;AAFS,KAAV,CAI0B,CAAA,EAAd,cAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOb,QAAa,SAAS,GAAA,WAAtB;AAAA;AAAA;AAQI,yBAAqC,YAArC,EACyB,IADzB,EACyC;AAAA;;AACrC,YAAI,YAAJ,EAAkB;AACd,gBAAM,IAAI,KAAJ,CAAU,kEAAV,CAAN;AACH;;AACD,YAAI,CAAC,IAAL,EAAW;AACP,gBAAM,IAAI,KAAJ,CAAU,kEAChB,0DADM,CAAN;AAEH;AACJ;;AAjBL;AAAA;AAAA,gCAC0B,oBAD1B,EACmE;AAC3D,iBAAO;AACH,YAAA,QAAQ,EAAE,WADP;AAEH,YAAA,SAAS,EAAE,CAAE;AAAE,cAAA,OAAO,EAAE,2CAAA,CAAA,eAAA,CAAX;AAA0B,cAAA,UAAU,EAAE;AAAtC,aAAF;AAFR,WAAP;AAIH;AANL;;AAAA;AAAA,OAAA;;;;cAQuD,S;AAAS,QAAA,UAAA,EAAA,CAAA;AAAA,UAAA,IAAA,EAA9C,0CAAA,CAAA,UAAA;AAA8C,SAAA,EAAtC;AAAA,UAAA,IAAA,EAAI,0CAAA,CAAA,UAAA;AAAJ,SAAsC;;cAC7B,iDAAA,CAAA,YAAA,C;AAAU,QAAA,UAAA,EAAA,CAAA;AAAA,UAAA,IAAA,EAA3B,0CAAA,CAAA,UAAA;AAA2B,SAAA;;;;AAThC,IAAA,SAAS,GAAA,WAAA,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAPrB,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAO,EADN;AAER,MAAA,YAAY,EAAE,EAFN;AAGR,MAAA,OAAO,EAAO,EAHN;AAIR,MAAA,SAAS,EAAE,CACT,+CAAA,CAAA,cAAA,CADS;AAJH,KAAT,CAOqB,EAQJ,kCAAA,CAAA,SAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,EAAA,CARI,EAQQ,kCAAA,CAAA,SAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,EAAA,CARR,EASJ,kCAAA,CAAA,SAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,EAAA,CATI,CAAA,EAAT,SAAS,CAAT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZN,QAAM,IAAI,GAAG,CAAC,2CAAA,CAAA,cAAA,CAAD,CAAb;;;;;;;;;;;;;;;;ACFP,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,cAAA,EAAA,YAAA;AAAA,aAAA,YAAA;AAAA,KAAA;AAAA;;;AAAA,QAAA,kCAAA,GAAA,mBAAA;AAAA;AAAA,uCAAA,CAAA;AAAA;;;AAAA,QAAA,0CAAA,GAAA,mBAAA;AAAA;AAAA,mDAAA,CAAA;AAAA;;;AAAA,QAAA,iDAAA,GAAA,mBAAA;AAAA;AAAA,qDAAA,CAAA;AAAA;;;AAAA,QAAA,uCAAA,GAAA,mBAAA;AAAA;AAAA,mCAAA,CAAA;AAAA;;;AAAA,QAAA,2CAAA,GAAA,mBAAA;AAAA;AAAA,uCAAA,CAAA;AAAA;;;;;;;;;;;;AAUG;;;AAkBH,QAAa,YAAb;AAAA;AAAA;AASE,4BAAsB,UAAtB,EAA6E,QAA7E,EAA2G,aAA3G,EAAuI;AAAA;;AAAjH,aAAA,UAAA,GAAA,UAAA;AAPZ,aAAA,QAAA,GAAW,uBAAX;AACH,aAAA,cAAA,GAAiB,IAAI,iDAAA,CAAA,aAAA,CAAJ,EAAjB;AACA,aAAA,aAAA,GAAgB,IAAI,2CAAA,CAAA,eAAA,CAAJ,EAAhB;AAEG,aAAA,OAAA,GAAU,IAAI,0CAAA,CAAA,cAAA,CAAJ,EAAV;;AAIR,YAAI,QAAJ,EAAc;AACZ,eAAK,QAAL,GAAgB,QAAhB;AACD;;AACD,YAAI,CAAC,MAAM,CAAC,QAAP,CAAgB,IAAhB,CAAqB,QAArB,CAA8B,WAA9B,CAAL,EAAiD;AAC/C,eAAK,QAAL,GAAgB,MAAM,CAAC,QAAP,CAAgB,QAAhB,GAA2B,IAA3B,GAAkC,MAAM,CAAC,QAAP,CAAgB,IAAlE;AACD;;AAED,YAAI,aAAJ,EAAmB;AACjB,eAAK,aAAL,GAAqB,aAArB;AACA,eAAK,QAAL,GAAgB,QAAQ,IAAI,aAAa,CAAC,QAA1B,IAAsC,KAAK,QAA3D;AACD;AACF;AAED;;;;;;AAvBF;AAAA;AAAA,uCA2ByB,QA3BzB,EA2B2C;AACvC,cAAM,IAAI,GAAG,qBAAb;AADuC;AAAA;AAAA;;AAAA;AAEvC,iCAAsB,QAAtB,8HAAgC;AAAA,kBAArB,OAAqB;;AAC9B,kBAAI,IAAI,KAAK,OAAb,EAAsB;AACpB,uBAAO,IAAP;AACD;AACF;AANsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAOvC,iBAAO,KAAP;AACD,SAnCH,CAiDE;;AAjDF;AAAA;AAAA,uCAkD4E;AAAA,cAAtD,OAAsD,uEAAvC,MAAuC;AAAA,cAA/B,cAA+B,uEAAL,KAAK;AAExE,cAAI,OAAO,GAAG,KAAK,cAAnB,CAFwE,CAIxE;;AACA,cAAI,iBAAiB,GAAa,CAChC,kBADgC,CAAlC;AAGA,cAAM,wBAAwB,GAAuB,KAAK,aAAL,CAAmB,kBAAnB,CAAsC,iBAAtC,CAArD;;AACA,cAAI,wBAAwB,IAAI,SAAhC,EAA2C;AACzC,YAAA,OAAO,GAAG,OAAO,CAAC,GAAR,CAAY,QAAZ,EAAsB,wBAAtB,CAAV;AACD,WAXuE,CAaxE;;;AACA,cAAM,QAAQ,GAAa,EAA3B;AAEA,iBAAO,KAAK,UAAL,CAAgB,GAAhB,WAAqC,KAAK,QAA1C,kBACL;AACE,YAAA,eAAe,EAAE,KAAK,aAAL,CAAmB,eADtC;AAEE,YAAA,OAAO,EAAE,OAFX;AAGE,YAAA,OAAO,EAAE,OAHX;AAIE,YAAA,cAAc,EAAE;AAJlB,WADK,CAAP;AAQD;AA1EH;AAAA;AAAA,4CAqFiF;AAAA,cAAtD,OAAsD,uEAAvC,MAAuC;AAAA,cAA/B,cAA+B,uEAAL,KAAK;AAE7E,cAAI,OAAO,GAAG,KAAK,cAAnB,CAF6E,CAI7E;;AACA,cAAI,iBAAiB,GAAa,CAChC,YADgC,CAAlC;AAGA,cAAM,wBAAwB,GAAuB,KAAK,aAAL,CAAmB,kBAAnB,CAAsC,iBAAtC,CAArD;;AACA,cAAI,wBAAwB,IAAI,SAAhC,EAA2C;AACzC,YAAA,OAAO,GAAG,OAAO,CAAC,GAAR,CAAY,QAAZ,EAAsB,wBAAtB,CAAV;AACD,WAX4E,CAa7E;;;AACA,cAAM,QAAQ,GAAa,EAA3B;AAEA,iBAAO,KAAK,UAAL,CAAgB,GAAhB,WAAoC,KAAK,QAAzC,wBACL;AACE,YAAA,eAAe,EAAE,KAAK,aAAL,CAAmB,eADtC;AAEE,YAAA,OAAO,EAAE,OAFX;AAGE,YAAA,OAAO,EAAE,OAHX;AAIE,YAAA,cAAc,EAAE;AAJlB,WADK,CAAP;AAQD;AA7GH;AAAA;AAAA,uCAyHwB,EAzHxB,EAyH6F;AAAA,cAAtD,OAAsD,uEAAvC,MAAuC;AAAA,cAA/B,cAA+B,uEAAL,KAAK;;AAEzF,cAAI,EAAE,KAAK,IAAP,IAAe,EAAE,KAAK,SAA1B,EAAqC;AACnC,kBAAM,IAAI,KAAJ,CAAU,0EAAV,CAAN;AACD;;AAED,cAAI,OAAO,GAAG,KAAK,cAAnB,CANyF,CAQzF;;AACA,cAAI,iBAAiB,GAAa,CAChC,kBADgC,CAAlC;AAGA,cAAM,wBAAwB,GAAuB,KAAK,aAAL,CAAmB,kBAAnB,CAAsC,iBAAtC,CAArD;;AACA,cAAI,wBAAwB,IAAI,SAAhC,EAA2C;AACzC,YAAA,OAAO,GAAG,OAAO,CAAC,GAAR,CAAY,QAAZ,EAAsB,wBAAtB,CAAV;AACD,WAfwF,CAiBzF;;;AACA,cAAM,QAAQ,GAAa,EAA3B;AAEA,iBAAO,KAAK,UAAL,CAAgB,GAAhB,WAA8B,KAAK,QAAnC,yBAA0D,kBAAkB,CAAC,MAAM,CAAC,EAAD,CAAP,CAA5E,GACL;AACE,YAAA,eAAe,EAAE,KAAK,aAAL,CAAmB,eADtC;AAEE,YAAA,OAAO,EAAE,OAFX;AAGE,YAAA,OAAO,EAAE,OAHX;AAIE,YAAA,cAAc,EAAE;AAJlB,WADK,CAAP;AAQD;AArJH;AAAA;AAAA,mCAuJoB,KAvJpB,EAuJgC;AAC5B,eAAK,OAAL,CAAa,IAAb,CAAkB,KAAlB;AACD;AAzJH;AAAA;AAAA,sCAqKuB,IArKvB,EAqK6F;AAAA,cAAtD,OAAsD,uEAAvC,MAAuC;AAAA,cAA/B,cAA+B,uEAAL,KAAK;;AAEzF,cAAI,IAAI,KAAK,IAAT,IAAiB,IAAI,KAAK,SAA9B,EAAyC;AACvC,kBAAM,IAAI,KAAJ,CAAU,2EAAV,CAAN;AACD;;AAED,cAAI,OAAO,GAAG,KAAK,cAAnB,CANyF,CAQzF;;AACA,cAAI,iBAAiB,GAAa,CAChC,kBADgC,CAAlC;AAGA,cAAM,wBAAwB,GAAuB,KAAK,aAAL,CAAmB,kBAAnB,CAAsC,iBAAtC,CAArD;;AACA,cAAI,wBAAwB,IAAI,SAAhC,EAA2C;AACzC,YAAA,OAAO,GAAG,OAAO,CAAC,GAAR,CAAY,QAAZ,EAAsB,wBAAtB,CAAV;AACD,WAfwF,CAiBzF;;;AACA,cAAM,QAAQ,GAAa,CACzB,kBADyB,CAA3B;AAGA,cAAM,uBAAuB,GAAuB,KAAK,aAAL,CAAmB,uBAAnB,CAA2C,QAA3C,CAApD;;AACA,cAAI,uBAAuB,IAAI,SAA/B,EAA0C;AACxC,YAAA,OAAO,GAAG,OAAO,CAAC,GAAR,CAAY,cAAZ,EAA4B,uBAA5B,CAAV;AACD;;AAED,iBAAO,KAAK,UAAL,CAAgB,IAAhB,WAA6B,KAAK,QAAlC,kBACL,IADK,EAEL;AACE,YAAA,eAAe,EAAE,KAAK,aAAL,CAAmB,eADtC;AAEE,YAAA,OAAO,EAAE,OAFX;AAGE,YAAA,OAAO,EAAE,OAHX;AAIE,YAAA,cAAc,EAAE;AAJlB,WAFK,CAAP;AASD,SAxMH,CAoNE;;AApNF;AAAA;AAAA,qDAqN0F;AAAA,cAAtD,OAAsD,uEAAvC,MAAuC;AAAA,cAA/B,cAA+B,uEAAL,KAAK;AAEtF,cAAI,OAAO,GAAG,KAAK,cAAnB,CAFsF,CAItF;;AACA,cAAI,iBAAiB,GAAa,CAChC,kBADgC,CAAlC;AAGA,cAAM,wBAAwB,GAAuB,KAAK,aAAL,CAAmB,kBAAnB,CAAsC,iBAAtC,CAArD;;AACA,cAAI,wBAAwB,IAAI,SAAhC,EAA2C;AACzC,YAAA,OAAO,GAAG,OAAO,CAAC,GAAR,CAAY,QAAZ,EAAsB,wBAAtB,CAAV;AACD,WAXqF,CAatF;;;AACA,cAAM,QAAQ,GAAa,EAA3B;AAEA,iBAAO,KAAK,UAAL,CAAgB,GAAhB,WAAiC,KAAK,QAAtC,iCACL;AACE,YAAA,eAAe,EAAE,KAAK,aAAL,CAAmB,eADtC;AAEE,YAAA,OAAO,EAAE,OAFX;AAGE,YAAA,OAAO,EAAE,OAHX;AAIE,YAAA,cAAc,EAAE;AAJlB,WADK,CAAP;AAQD;AA7OH;;AAAA;AAAA,OAAA;;;;cASoC,iDAAA,CAAA,YAAA;;;;gBAAa,0CAAA,CAAA,UAAA;WAAQ;AAAA,UAAA,IAAA,EAAI,0CAAA,CAAA,QAAA,CAAJ;AAAU,UAAA,IAAA,EAAA,CAAC,uCAAA,CAAA,WAAA,CAAD;AAAV,S;;cAAmE,2CAAA,CAAA,eAAA,C;AAAa,QAAA,UAAA,EAAA,CAAA;AAAA,UAAA,IAAA,EAAvC,0CAAA,CAAA,UAAA;AAAuC,SAAA;;;;AAH7H,IAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAAT,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,EAAS,CAAA,E,sBAAA,E,SAAA,E,KAAoC,CAApC;AANC,IAAA,YAAY,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CADxB,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,EACwB,EASwB,kCAAA,CAAA,SAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,EAAA,CATxB,EASoC,kCAAA,CAAA,SAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,0CAAA,CAAA,QAAA,CAAA,CAAA,CAAO,uCAAA,CAAA,WAAA,CAAP,CAAA,CATpC,EASyE,kCAAA,CAAA,SAAA,CAAA,CAAA,CAAA,EAAA,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,EAAA,CATzE,CAAA,EAAZ,YAAY,CAAZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCnBA,a;;;AAQT,+BAAiE;AAAA,YAArD,uBAAqD,uEAAF,EAAE;;AAAA;;AAC7D,aAAK,OAAL,GAAe,uBAAuB,CAAC,OAAvC;AACA,aAAK,QAAL,GAAgB,uBAAuB,CAAC,QAAxC;AACA,aAAK,QAAL,GAAgB,uBAAuB,CAAC,QAAxC;AACA,aAAK,WAAL,GAAmB,uBAAuB,CAAC,WAA3C;AACA,aAAK,QAAL,GAAgB,uBAAuB,CAAC,QAAxC;AACA,aAAK,eAAL,GAAuB,uBAAuB,CAAC,eAA/C;AACH;AAED;;;;;;;;;;;gDAOgC,Y,EAAsB;AAAA;;AAClD,cAAI,YAAY,CAAC,MAAb,IAAuB,CAA3B,EAA8B;AAC1B,mBAAO,SAAP;AACH;;AAED,cAAI,IAAI,GAAG,YAAY,CAAC,IAAb,CAAkB,UAAA,CAAC;AAAA,mBAAI,MAAI,CAAC,UAAL,CAAgB,CAAhB,CAAJ;AAAA,WAAnB,CAAX;;AACA,cAAI,IAAI,KAAK,SAAb,EAAwB;AACpB,mBAAO,YAAY,CAAC,CAAD,CAAnB;AACH;;AACD,iBAAO,IAAP;AACH;AAED;;;;;;;;;;2CAO0B,O,EAAiB;AAAA;;AACvC,cAAI,OAAO,CAAC,MAAR,IAAkB,CAAtB,EAAyB;AACrB,mBAAO,SAAP;AACH;;AAED,cAAI,IAAI,GAAG,OAAO,CAAC,IAAR,CAAa,UAAA,CAAC;AAAA,mBAAI,MAAI,CAAC,UAAL,CAAgB,CAAhB,CAAJ;AAAA,WAAd,CAAX;;AACA,cAAI,IAAI,KAAK,SAAb,EAAwB;AACpB,mBAAO,OAAO,CAAC,CAAD,CAAd;AACH;;AACD,iBAAO,IAAP;AACH;AAED;;;;;;;;;;;;;mCAUkB,I,EAAY;AAC1B,cAAM,QAAQ,GAAW,IAAI,MAAJ,CAAW,+DAAX,EAA4E,GAA5E,CAAzB;AACA,iBAAO,IAAI,IAAI,IAAR,KAAiB,QAAQ,CAAC,IAAT,CAAc,IAAd,KAAuB,IAAI,CAAC,WAAL,OAAuB,6BAA/D,CAAP;AACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DL;;;;;QAGa,Q,GACX,kBACS,IADT,EAES,OAFT,EAE0B;AAAA;;AADjB,WAAA,IAAA,GAAA,IAAA;AACA,WAAA,OAAA,GAAA,OAAA;AAER,K;;;;;;;;;;;;;;;;;ACvBH,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,MAAA,EAAA,YAAA;AAAA,aAAA,IAAA;AAAA,KAAA;AAAA;;;AAAA,QAAA,kCAAA,GAAA,mBAAA;AAAA;AAAA,uCAAA,CAAA;AAAA;;;;;;;;;;;;AAYA;;;;;QAGa,I,GACX,cACS,IADT,EAES,OAFT,EAGS,MAHT,EAIS,KAJT,EAIuB;AAAA;;AAHd,WAAA,IAAA,GAAA,IAAA;AACA,WAAA,OAAA,GAAA,OAAA;AACA,WAAA,MAAA,GAAA,MAAA;AACA,WAAA,KAAA,GAAA,KAAA;AAEV,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtBD,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,SAAA,EAAA,YAAA;AAAA,aAAA,OAAA;AAAA,KAAA;AAAA;;;AAAA,QAAA,kCAAA,GAAA,mBAAA;AAAA;AAAA,uCAAA,CAAA;AAAA;;;;;;;;;;;;AAYA;;;;;QAGa,O,GACX,iBACS,IADT,EAES,OAFT,EAGS,MAHT,EAIS,KAJT,EAIuB;AAAA;;AAHd,WAAA,IAAA,GAAA,IAAA;AACA,WAAA,OAAA,GAAA,OAAA;AACA,WAAA,MAAA,GAAA,MAAA;AACA,WAAA,KAAA,GAAA,KAAA;AAER,K;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBI,QAAM,SAAS,GAAG,IAAI,0CAAA,CAAA,gBAAA,CAAJ,CAA2B,UAA3B,CAAlB;AACA,QAAM,kBAAkB,GAAG;AAC9B,aAAO,GADuB;AAE9B,aAAO,KAFuB;AAG9B,aAAO,GAHuB;AAI9B,eAAS;AAJqB,KAA3B;;;;;;;;;;;;;;;;ACHP,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAA;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA,EAAA,aAAA,EAAA,YAAA;AAAA,aAAA,WAAA;AAAA,KAAA;AAAA;;;AAAA,QAAA,kCAAA,GAAA,mBAAA;AAAA;AAAA,uCAAA,CAAA,C,CAAA;AACA;AACA;;;AAEO,QAAM,WAAW,GAAG;AACzB,MAAA,UAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA,QAAI,sDAAA,CAAA,aAAA,CAAA,CAAY,UAAhB,EAA4B;AAC1B,MAAA,MAAA,CAAA,0CAAA,CAAA,gBAAA,CAAA,CAAA;AACD;;AAED,IAAA,MAAA,CAAA,8DAAA,CAAA,wBAAA,CAAA,CAAA,GAAyB,eAAzB,CAAyC,4CAAA,CAAA,WAAA,CAAzC,EACG,KADH,CACS,UAAA,GAAG;AAAA,aAAI,OAAO,CAAC,KAAR,CAAc,GAAd,CAAJ;AAAA,KADZ","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div style=\\\"text-align:center\\\" class=\\\"content\\\">\\n    <h1>\\n        Welcome to {{title}}!\\n    </h1>\\n    <mat-divider></mat-divider>\\n    <hero-fight></hero-fight>\\n    <hero-fight-list></hero-fight-list>\\n</div>\\n\"","export default \"<table mat-table [dataSource]=\\\"dataSource\\\"  class=\\\"mat-elevation-z8 table table-striped\\\">\\n    <thead>\\n    <ng-container matColumnDef=\\\"id\\\">\\n        <th scope=\\\"col\\\" class=\\\"fight-list-header thead-dark\\\" mat-header-cell *matHeaderCellDef > Id </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"fightDate\\\">\\n        <th scope=\\\"col\\\" class=\\\"fight-list-header thead-dark\\\" mat-header-cell *matHeaderCellDef> Fight Date </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.fightDate | date: 'medium'}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"winnerName\\\">\\n        <th scope=\\\"col\\\" class=\\\"fight-list-header thead-dark\\\" mat-header-cell *matHeaderCellDef> Winner </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.winnerName}} </td>\\n    </ng-container>\\n    <ng-container matColumnDef=\\\"loserName\\\">\\n        <th scope=\\\"col\\\" class=\\\"fight-list-header thead-dark\\\" mat-header-cell *matHeaderCellDef> Loser </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.loserName}} </td>\\n    </ng-container>\\n    </thead>\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n</table>\\n\"","export default \"<div class=\\\"row\\\" id=\\\"fight-row\\\">\\n    <div class=\\\"col-xs-6 col-sm-4 col-md-4\\\">\\n        <div class=\\\"hero card-pf\\\" [className]=\\\"winner == figthers.hero.name ? 'hero-winner-card' : 'off'\\\">\\n            <h2 class=\\\"hero-name\\\">\\n                {{figthers.hero.name}}\\n            </h2>\\n            <div class=\\\"card-pf-body\\\">\\n                <img class=\\\"rounded\\\" src=\\\"{{figthers.hero.picture}}\\\">\\n\\n                <h2><i class=\\\"fas fa-bolt\\\"></i> {{figthers.hero.level}}</h2>\\n                <h2><a data-toggle=\\\"collapse\\\" href=\\\"#heroPowers\\\" role=\\\"button\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"heroPowers\\\"><i class=\\\"powers hero fas fa-atom\\\"></i></a></h2>\\n\\n                <div class=\\\"collapse\\\" id=\\\"heroPowers\\\">\\n                    {{figthers.hero.powers}}\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"col-xs-6 col-sm-4 col-md-4\\\">\\n        <div class=\\\"card-pf\\\">\\n            <div class=\\\"card-pf-body\\\">\\n                <button (click)=\\\"newFighters()\\\" class=\\\"btn btn-primary btn-block btn-lg\\\"><h4><i class=\\\"fas fa-random\\\"></i> NEW FIGHTERS</h4></button>\\n                <button (click)=\\\"fight()\\\" class=\\\"btn btn-danger btn-block btn-lg\\\"><h4><i class=\\\"fab fa-battle-net\\\"></i> FIGHT !</h4></button>\\n            </div>\\n\\n            <div *ngIf=\\\"winner\\\" class=\\\"winner-text\\\">Winner is <span [className]=\\\"winner == figthers.villain.name ? 'winner-villain' : 'winner-hero'\\\">{{winner}}</span></div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"col-xs-6 col-sm-4 col-md-4\\\">\\n        <div class=\\\"villain card-pf\\\" [className]=\\\"winner == figthers.villain.name ? 'villain-winner-card' : 'off'\\\">\\n            <h2 class=\\\"villain-name\\\">\\n                {{figthers.villain.name}}\\n            </h2>\\n            <div class=\\\"card-pf-body\\\">\\n                <img class=\\\"rounded\\\" src=\\\"{{figthers.villain.picture}}\\\">\\n\\n                <h2><i class=\\\"fas fa-bolt\\\"></i> {{figthers.villain.level}}</h2>\\n                <h2><a data-toggle=\\\"collapse\\\" href=\\\"#villainPowers\\\" role=\\\"button\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"villainPowers\\\"><i class=\\\"powers villain fas fa-atom\\\"></i></a></h2>\\n\\n                <div class=\\\"collapse\\\" id=\\\"villainPowers\\\">\\n                    {{figthers.villain.powers}}\\n                </div>\\n\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'hero-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'Super Heroes Fight';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { FightListComponent } from './fight-list/fight-list.component';\nimport { FightComponent } from './fight/fight.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTableModule } from '@angular/material/table';\nimport { FightService } from './shared';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatGridListModule } from '@angular/material/grid-list';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FightListComponent,\n    FightComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    MatDividerModule,\n    MatCardModule,\n    MatButtonModule,\n    MatGridListModule,\n    MatTableModule\n  ],\n  providers: [FightService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, OnInit} from '@angular/core';\nimport { Fight, FightService } from '../shared';\nimport {MatTableDataSource} from \"@angular/material\";\n\n@Component({\n  selector: 'hero-fight-list',\n  templateUrl: './fight-list.component.html',\n  styles: []\n})\nexport class FightListComponent implements OnInit {\n\n  dataSource: MatTableDataSource < Fight > ;\n  displayedColumns: string[] = ['id', 'fightDate', 'winnerName', 'loserName'];\n\n  constructor(private fightService: FightService) {\n    this.dataSource = new MatTableDataSource<Fight>();\n    fightService.emitter.subscribe(fight => {\n      const data = this.dataSource.data;\n      data.unshift(fight);\n      this.dataSource.data = data;\n    })\n  }\n\n  ngOnInit() {\n    this.fightService.apiFightsGet().subscribe(fights => {\n      this.dataSource.data = fights.reverse();\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Fighters, FightService, Hero, Villain } from '../shared';\n\n@Component({\n  selector: 'hero-fight',\n  templateUrl: './fight.component.html'\n})\nexport class FightComponent implements OnInit {\n\n  figthers: Fighters = new Fighters();\n  winner: String;\n\n  constructor(private fightService: FightService) {\n  }\n\n  ngOnInit() {\n    this.newFighters();\n  }\n\n  fight() {\n    this.fightService.apiFightsPost(this.figthers).subscribe(\n      fight => {\n        this.fightService.onNewFight(fight);\n        this.winner = fight.winnerName;\n      }\n    );\n  }\n\n  newFighters() {\n    this.winner = null;\n    this.fightService.apiFightsRandomfightersGet().subscribe(figthers => this.figthers = figthers);\n  }\n}\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { Configuration } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\n\nimport { FightService } from './api/fight.service';\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers: [\n    FightService ]\n})\nexport class ApiModule {\n    public static forRoot(configurationFactory: () => Configuration): ModuleWithProviders {\n        return {\n            ngModule: ApiModule,\n            providers: [ { provide: Configuration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: ApiModule,\n                 @Optional() http: HttpClient) {\n        if (parentModule) {\n            throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n    }\n}\n","export * from './fight.service';\nimport { FightService } from './fight.service';\nexport const APIS = [FightService];\n","/**\n * Fight API\n * This API allows a hero and a villain to fight\n *\n * OpenAPI spec version: 1.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *//* tslint:disable:no-unused-variable member-ordering */\n\nimport {EventEmitter, Inject, Injectable, Optional, Output} from '@angular/core';\nimport {HttpClient, HttpEvent, HttpHeaders, HttpResponse} from '@angular/common/http';\n\nimport {Observable} from 'rxjs';\n\nimport {Fight} from '../model/fight';\nimport {Fighters} from '../model/fighters';\nimport {ModelLong} from '../model/modelLong';\nimport {ModelString} from '../model/modelString';\nimport {URI} from '../model/uRI';\n\nimport {BASE_PATH} from '../variables';\nimport {Configuration} from '../configuration';\n\n\n@Injectable()\nexport class FightService {\n\n  protected basePath = 'http://localhost:8082';\n  public defaultHeaders = new HttpHeaders();\n  public configuration = new Configuration();\n\n  @Output() emitter = new EventEmitter<Fight>();\n\n\n  constructor(protected httpClient: HttpClient, @Optional() @Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n    if (basePath) {\n      this.basePath = basePath;\n    }\n    if (!window.location.host.includes(\"localhost\")) {\n      this.basePath = window.location.protocol + \"//\" + window.location.host;\n    }\n\n    if (configuration) {\n      this.configuration = configuration;\n      this.basePath = basePath || configuration.basePath || this.basePath;\n    }\n  }\n\n  /**\n   * @param consumes string[] mime-types\n   * @return true: consumes contains 'multipart/form-data', false: otherwise\n   */\n  private canConsumeForm(consumes: string[]): boolean {\n    const form = 'multipart/form-data';\n    for (const consume of consumes) {\n      if (form === consume) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n\n  /**\n   * Returns all the fights from the database\n   *\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  // tag::adocService[]\n  public apiFightsGet(observe?: 'body', reportProgress?: boolean): Observable<Array<Fight>>;\n  public apiFightsGet(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Array<Fight>>>;\n  public apiFightsGet(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Array<Fight>>>;\n\n  // end::adocService[]\n  public apiFightsGet(observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    let httpHeaderAccepts: string[] = [\n      'application/json'\n    ];\n    const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<Array<Fight>>(`${this.basePath}/api/fights`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers: headers,\n        observe: observe,\n        reportProgress: reportProgress\n      }\n    );\n  }\n\n  /**\n   *\n   *\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public apiFightsHelloGet(observe?: 'body', reportProgress?: boolean): Observable<ModelString>;\n  public apiFightsHelloGet(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<ModelString>>;\n  public apiFightsHelloGet(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<ModelString>>;\n  public apiFightsHelloGet(observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    let httpHeaderAccepts: string[] = [\n      'text/plain'\n    ];\n    const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<ModelString>(`${this.basePath}/api/fights/hello`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers: headers,\n        observe: observe,\n        reportProgress: reportProgress\n      }\n    );\n  }\n\n  /**\n   * Returns a fight for a given identifier\n   *\n   * @param id Fight identifier\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public apiFightsIdGet(id: ModelLong, observe?: 'body', reportProgress?: boolean): Observable<Fight>;\n  public apiFightsIdGet(id: ModelLong, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Fight>>;\n  public apiFightsIdGet(id: ModelLong, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Fight>>;\n  public apiFightsIdGet(id: ModelLong, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n    if (id === null || id === undefined) {\n      throw new Error('Required parameter id was null or undefined when calling apiFightsIdGet.');\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    let httpHeaderAccepts: string[] = [\n      'application/json'\n    ];\n    const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<Fight>(`${this.basePath}/api/fights/${encodeURIComponent(String(id))}`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers: headers,\n        observe: observe,\n        reportProgress: reportProgress\n      }\n    );\n  }\n\n  public onNewFight(fight: Fight) {\n    this.emitter.emit(fight);\n  }\n\n  /**\n   * Creates a fight between two fighters\n   *\n   * @param body The two fighters fighting\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  public apiFightsPost(body: Fighters, observe?: 'body', reportProgress?: boolean): Observable<Fight>;\n  public apiFightsPost(body: Fighters, observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<URI>>;\n  public apiFightsPost(body: Fighters, observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<URI>>;\n  public apiFightsPost(body: Fighters, observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n    if (body === null || body === undefined) {\n      throw new Error('Required parameter body was null or undefined when calling apiFightsPost.');\n    }\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    let httpHeaderAccepts: string[] = [\n      'application/json'\n    ];\n    const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [\n      'application/json'\n    ];\n    const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n    if (httpContentTypeSelected != undefined) {\n      headers = headers.set('Content-Type', httpContentTypeSelected);\n    }\n\n    return this.httpClient.post<URI>(`${this.basePath}/api/fights`,\n      body,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers: headers,\n        observe: observe,\n        reportProgress: reportProgress\n      }\n    );\n  }\n\n  /**\n   * Returns two random fighters\n   *\n   * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n   * @param reportProgress flag to report request and response progress.\n   */\n  // tag::adocService[]\n  public apiFightsRandomfightersGet(observe?: 'body', reportProgress?: boolean): Observable<Fighters>;\n  public apiFightsRandomfightersGet(observe?: 'response', reportProgress?: boolean): Observable<HttpResponse<Fighters>>;\n  public apiFightsRandomfightersGet(observe?: 'events', reportProgress?: boolean): Observable<HttpEvent<Fighters>>;\n  // end::adocService[]\n  public apiFightsRandomfightersGet(observe: any = 'body', reportProgress: boolean = false): Observable<any> {\n\n    let headers = this.defaultHeaders;\n\n    // to determine the Accept header\n    let httpHeaderAccepts: string[] = [\n      'application/json'\n    ];\n    const httpHeaderAcceptSelected: string | undefined = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n    if (httpHeaderAcceptSelected != undefined) {\n      headers = headers.set('Accept', httpHeaderAcceptSelected);\n    }\n\n    // to determine the Content-Type header\n    const consumes: string[] = [];\n\n    return this.httpClient.get<Fighters>(`${this.basePath}/api/fights/randomfighters`,\n      {\n        withCredentials: this.configuration.withCredentials,\n        headers: headers,\n        observe: observe,\n        reportProgress: reportProgress\n      }\n    );\n  }\n\n}\n","export interface ConfigurationParameters {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n}\n\nexport class Configuration {\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n\n    constructor(configurationParameters: ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length == 0) {\n            return undefined;\n        }\n\n        let type = contentTypes.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length == 0) {\n            return undefined;\n        }\n\n        let type = accepts.find(x => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime != null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n}\n","/**\n * Fight API\n * This API allows a hero and a villain to fight\n *\n * OpenAPI spec version: 1.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\nimport { Hero } from './hero';\nimport { Villain } from './villain';\n\n\n/**\n * A fight between one hero and one villain\n */\nexport class Fighters {\n  constructor(\n    public hero?: Hero,\n    public villain?: Villain,\n  ) {\n  }\n}\n","/**\n * Fight API\n * This API allows a hero and a villain to fight\n *\n * OpenAPI spec version: 1.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\n/**\n * The hero fighting against the villain\n */\nexport class Hero {\n  constructor(\n    public name?: string,\n    public picture?: string,\n    public powers?: string,\n    public level?: bigint\n) {\n}\n}\n","/**\n * Fight API\n * This API allows a hero and a villain to fight\n *\n * OpenAPI spec version: 1.0\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\n/**\n * The villain fighting against the hero\n */\nexport class Villain {\n  constructor(\n    public name?: string,\n    public picture?: string,\n    public powers?: string,\n    public level?: bigint\n  ) {\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}